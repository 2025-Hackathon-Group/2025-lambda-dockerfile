services:
  frontend:
    build:
      context: ./2025-lambda-pdf-translator-frontend
      dockerfile: Dockerfile
    container_name: pdf_translator_frontend
    ports:
      - "5173:80"
    depends_on:
      - api
    networks:
      - pdf_translator
    restart: unless-stopped

  api:
    build:
      context: ./2025-lambda-pdf-translator-api
      dockerfile: Dockerfile.dev
    container_name: pdf_translator_api
    ports:
      - "3333:3333"
    depends_on:
      - db
    environment:
      - PORT=3333
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=postgres
      - DB_SSL_MODE=disable
      - JWT_SECRET=your-secret-key-here
    networks:
      - pdf_translator
    restart: unless-stopped

  db:
    image: postgres:latest
    container_name: pdf_translator_db
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./2025-lambda-pdf-translator-api/docker/db/psql_dump.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - pdf_translator
    restart: unless-stopped

  s3:
    image: minio/minio
    container_name: s3
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
      - MINIO_REGION=us-east-1
    volumes:
      - ./docker/s3:/data
    networks:
      - pdf_translator
    command: server /data --console-address ":9001" 
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  pdf_translator:
    driver: bridge